{"mappings":"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","sources":["src/js/weather.js"],"sourcesContent":["const cityName = document.querySelector('.city-name');\nconst temperature = document.querySelector('.temperature');\nconst description = document.querySelector('.description');\nconst weatherIcon = document.querySelector('.weather-icon');\nconst dateEl = document.querySelector('.date');\nconst weekDay = document.querySelector(`.week-day`);\nconst monthAndYear = document.querySelector(`.month_year`);\nconst weatherCard = document.querySelector(`.weather-card`);\nconst weekWeatherBtn = document.querySelector(`.week-weather-btn`);\nconst todayWeatherBtn = document.querySelector(`.today-forecast-btn`);\nconst weekWeatherCard = document.querySelector(`.week-forecast`);\nconst weekWeatherList = document.querySelector(`.week-forecast-list`);\nconst API_KEY = 'e47ed3661eb61aefd3a2374eeeb0d76d';\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nfunction getWeatherData(latitude, longitude) {\n  const BASE_URL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n\n  fetch(BASE_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(error);\n      }\n      return response.json();\n    })\n    .then(data => {\n      const iconUrl = `https://openweathermap.org/img/w/${data.weather[0].icon}.png`;\n      cityName.insertAdjacentHTML(`beforeend`, data.name);\n      temperature.innerHTML = `${Math.round(data.main.temp)}&deg`;\n      description.textContent = data.weather[0].description;\n      weatherIcon.setAttribute('src', iconUrl);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfunction successCallback(position) {\n  const latitude = position.coords.latitude;\n  const longitude = position.coords.longitude;\n  getWeatherData(latitude, longitude);\n}\n\nfunction errorCallback() {\n  const urlKyiv = `https://api.openweathermap.org/data/2.5/weather?q=Kyiv&units=metric&appid=${API_KEY}`;\n  fetch(urlKyiv)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(error);\n      }\n      return response.json();\n    })\n    .then(data => {\n      const iconUrl = `https://openweathermap.org/img/w/${data.weather[0].icon}.png`;\n      cityName.insertAdjacentHTML(`beforeend`, `Kyiv`);\n      temperature.innerHTML = `${Math.round(data.main.temp)}&deg`;\n      description.textContent = data.weather[0].description;\n      weatherIcon.setAttribute('src', iconUrl);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nnavigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\nfunction displayDate() {\n  const date = new Date();\n  const dayOfWeek = daysOfWeek[date.getDay()];\n  const dayOfMonth = date.getDate().toString().padStart(2, '0');\n  const month = months[date.getMonth()];\n  const year = date.getFullYear();\n  weekDay.textContent = dayOfWeek;\n  monthAndYear.innerHTML = `${dayOfMonth} ${month} ${year}`;\n}\n\ndisplayDate();\n\nweekWeatherBtn.addEventListener(`click`, () => {\n  weatherCard.style.display = 'none';\n  weekWeatherCard.style.display = 'block';\n  const newApiKey = `494cc86ea4be4942a2ea7eae8a726091`;\n  function getCurrentLocation() {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n  }\n\n  function getWeatherData(location) {\n    const url = `https://api.weatherbit.io/v2.0/forecast/daily?lat=${location.latitude}&lon=${location.longitude}&key=${newApiKey}`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => data.data.slice(0, 7));\n  }\n\n  function displayWeatherData(weatherData) {\n    const weekWeatherMarkup = weatherData\n      .map(day => {\n        const date = new Date(day.valid_date).toLocaleDateString();\n        const minTemp = day.min_temp;\n        const maxTemp = day.max_temp;\n        const descriptionWeek = day.weather.description;\n        const iconWeek = day.weather.icon;\n        return `\n            <li class=\"icon-item\">\n             <img class=\"week-weather-icon\" src=\"https://www.weatherbit.io/static/img/icons/${iconWeek}.png\">\n             <div class=\"week-weather-item\">\n              <div class=\"week-weather-date\">${date}</div>\n              <div class=\"week-weather-body\">\n               <div class=\"week-weather-temp\">${Math.round(\n                 minTemp\n               )}° / ${Math.round(maxTemp)}°</div>\n               <div class=\"week-weather-desc\">${descriptionWeek}</div>\n              </div>\n             </div>\n        </li>`;\n      })\n      .join('');\n    weekWeatherList.innerHTML = weekWeatherMarkup;\n  }\n\n  getCurrentLocation()\n    .then(location => getWeatherData(location))\n    .catch(() => getWeatherData({ latitude: '50.45466', longitude: '30.5238' }))\n    .then(weatherData => displayWeatherData(weatherData));\n});\n\ntodayWeatherBtn.addEventListener(`click`, () => {\n  weekWeatherCard.style.display = 'none';\n  weatherCard.style.display = 'block';\n});\n"],"names":["$83ee39fa453a4c23$var$cityName","document","querySelector","$83ee39fa453a4c23$var$temperature","$83ee39fa453a4c23$var$description","$83ee39fa453a4c23$var$weatherIcon","$83ee39fa453a4c23$var$weekDay","$83ee39fa453a4c23$var$monthAndYear","$83ee39fa453a4c23$var$weatherCard","$83ee39fa453a4c23$var$weekWeatherBtn","$83ee39fa453a4c23$var$todayWeatherBtn","$83ee39fa453a4c23$var$weekWeatherCard","$83ee39fa453a4c23$var$weekWeatherList","$83ee39fa453a4c23$var$daysOfWeek","$83ee39fa453a4c23$var$months","navigator","geolocation","getCurrentPosition","position","latitude","longitude","fetch","then","response","ok","Error","error","json","data","iconUrl","weather","icon","insertAdjacentHTML","name","innerHTML","Math","round","main","temp","textContent","description","setAttribute","catch","console","log","$83ee39fa453a4c23$var$getWeatherData","coords","date","Date","dayOfWeek","getDay","dayOfMonth","getDate","toString","padStart","month","getMonth","year","getFullYear","$83ee39fa453a4c23$var$displayDate","addEventListener","style","display","getWeatherData1","location","url","slice","Promise","resolve","reject","weatherData","weekWeatherMarkup","map","day","valid_date","toLocaleDateString","minTemp","min_temp","maxTemp","max_temp","descriptionWeek","join","displayWeatherData"],"version":3,"file":"index.8a1f70b8.js.map"}